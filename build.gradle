buildscript {
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: "scala"
apply plugin: "forge"

version = "0.0.1"
ext.bdlibver = "1.6.0.36"
ext.versuffix = "mc1710"
ext.minecraft_version = "1.7.10"
ext.forge_version = "10.13.2.1231"
ext.apiVer = version

if (project.hasProperty('buildnum')) {
    project.version = project.version + '.' + project.buildnum
} else {
    project.version = project.version + '-DEV'
}

group= "com.t-p-l"
archivesBaseName = "hamcraft"

minecraft {
    version = "${project.minecraft_version}-${project.forge_version}"
    replace("MOD_VERSION", project.version)
    //replace("version", project.version)
    //replace("mcversion", project.minecraft.version)
}

repositories {
    mavenCentral()
    maven {
        name = "bdew"
        url = "http://jenkins.bdew.net/maven"
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name "waila"
        url "http://mobiusstrip.eu/maven"
    }
}

dependencies {
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.110:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev"
    compile "mcp.mobius.waila:Waila:1.5.6a_1.7.10"
    compile "net.bdew:bdlib:" + bdlibver
    compile "com.mod-buildcraft:buildcraft:6.2.6:dev"
    compile "net.bdew.thirdparty:CoFHLib:R1.0.1:api"
    compile "net.sengir.forestry:forestry_1.7.10:3.3.0.6:api"
    compile "com.typesafe:config:1.2.1"
}

import org.apache.tools.ant.filters.ReplaceTokens

sourceSets {
    main {
        scala {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
        output.resourcesDir = output.classesDir // Hack for IDEA
    }
}

processResources {

    exclude '**/*.pxm'

    inputs.property "tokens", minecraft.replacements

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        filter(ReplaceTokens, tokens: minecraft.replacements)
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
